{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","todos","setTodos","setStatus","onChange","e","target","value","maxlength","type","className","required","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","TransitionGroup","component","CSSTransition","timeout","classNames","unmountOnExit","App","useState","status","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.892e6af8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({setInputText,inputText, todos, setTodos, setStatus}) => {\r\n\r\n     const submitTodoHandler = (e) =>{\r\n         e.preventDefault();\r\n        setTodos([...todos, {text: inputText, completed: false, id: Math.random() }]);\r\n\r\n        setInputText(\"\");\r\n     }\r\n\r\n     const textChangedHandler = (e) =>{\r\n         setInputText(e.target.value);\r\n     }\r\n\r\n     const statusHandler= (e) =>{\r\n        setStatus(e.target.value);\r\n     }\r\n\r\n    return (<form>\r\n        <input onChange={textChangedHandler} maxlength=\"40\" type=\"text\" value={inputText} className=\"todo-input\" required/>\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>)\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nconst Todo = ({setTodos,todos,todo,text}) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n        \r\n    };\r\n\r\n    const completeHandler = () => {\r\n\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        }\r\n    ))};\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className= {`todo-item ${todo.completed ?\"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Todo from \"./Todo\"\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n\r\n    return(\r\n        <div className=\"todo-container\">\r\n        \r\n        <TransitionGroup component='ul' className=\"todo-list\" >\r\n            { filteredTodos.map((todo) => (\r\n                <CSSTransition\r\n                    timeout={1000}\r\n                    key={todo.id}\r\n                    classNames= \"todo\" unmountOnExit>\r\n\r\n                    <Todo \r\n                    setTodos={setTodos}\r\n                    todos={todos}\r\n                    todo= {todo}\r\n                    key = {todo.id}\r\n                    text = {todo.text} \r\n                    />\r\n\r\n                </CSSTransition>\r\n            ))\r\n                }\r\n        </TransitionGroup>\r\n    \r\n      </div> );\r\n}\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\n\nfunction App() {\n\n  //states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([])\n  const [status,setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos]= useState([]);\n\n  //Fuctions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed': setFilteredTodos(todos.filter(todo => todo.completed === true));\n      break;\n      case 'uncompleted': setFilteredTodos(todos.filter(todo => todo.completed === false));\n      break;\n      default: setFilteredTodos(todos);\n      break;\n    }\n  };\n\n  const setLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos',JSON.stringify([]))\n    }else{\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  };\n\n  //use effect\n\n  useEffect(() => {\n    getLocalTodos();\n  },[]);\n  \n  useEffect(() =>{\n    filterHandler();\n    setLocalTodos();\n  },[todos,status]);\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Anupam's Todo List</h1>\n      </header>\n\n      <Form todos={todos} setTodos= {setTodos} \n      setInputText={setInputText} inputText= {inputText}\n      status={status} setStatus={setStatus} />\n      <TodoList todos={todos} setTodos={setTodos} \n        filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}